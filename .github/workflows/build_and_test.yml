name: CI
on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: Set-up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Set-up latest pip
      run: |
        python -m pip install --upgrade pip
    - name: Set-up python headers if required
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-dev
      if: runner.os == 'Linux'
    - name: Cache Conan directory
      id: cache-conan
      uses: actions/cache@v1
      with:
        path: ~/.conan
        key: ${{ runner.os }}-conan
        restore-keys: |
          ${{ runner.os }}-conan
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: pip cache
      uses: actions/cache@v1
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-1
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Set-up conan
      run: |
        pip install --upgrade conan
    # Runs a set of commands using the runners shell
    - name: Debug build and test
      run: |
        if [ -x `which xcodebuild` ]; then export SDKROOT=$(xcodebuild -version -sdk macosx Path) ; fi;
        git submodule update --init

        mkdir -p $GITHUB_WORKSPACE/build-output
        cd $GITHUB_WORKSPACE/build-output
        cmake -DCMAKE_BUILD_TYPE=Release $GITHUB_WORKSPACE
        make
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}.build-output
        path: build-output
    - name: Run tests
      run: |
        cd $GITHUB_WORKSPACE/build-output
        ./bin/filesaver_tests -d yes
    - name: Build the GUI app
      run: |
        cd $GITHUB_WORKSPACE
        make build-cli-release build-cli-release-x86
        make build-gui-release
      if: runner.os != 'Linux'
